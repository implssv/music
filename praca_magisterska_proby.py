# -*- coding: utf-8 -*-
"""praca_magisterska_proby.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vJdnUwB5-IHovhcbQPSH-jLliL8T0BrM
"""


#experiments
!curl -s https://course.fast.ai/setup/colab | bash

from google.colab import drive
drive.mount('/content/gdrive', force_remount=True)
root_dir = "/content/gdrive/My Drive/"
base_dir = root_dir + 'fastai-v3/'

from fastai import *
from fastai.vision import *

cd /content/gdrive/My Drive/Colab Notebooks

path = "img_data/"
bs = 32 
data = ImageDataBunch.from_folder(path, valid_pct=0.3, bs=bs)
data.normalize(imagenet_stats)

data.show_batch(rows=3, figsize=(5,8))

bs = 7
data = ImageDataBunch.from_folder('img_data/', valid_pct=0.3, bs=bs)
data.normalize(imagenet_stats)



print(data.classes)

learner = cnn_learner(data, models.xresnet, metrics=accuracy)

learner = cnn_learner(data, models.resnet34, metrics=accuracy)

learner.fit_one_cycle(10)

ls

learner.save("resnet_10cycles")

learner2 = cnn_learner(data, models.resnet50, metrics=accuracy)

learner2.fit_one_cycle(2)

learner2.load('/content/gdrive/My Drive/Colab Notebooks/models/resnet50_2333')

cd /content/gdrive/My Drive/Colab Notebooks/

learner2.fit_one_cycle(1)

learner2.save("resnet50_r33")

learner2.fit_one_cycle(1)

learner2.fit_one_cycle(1)

preds,y,losses = learner.get_preds(with_loss=True)
interp = ClassificationInterpretation(learner, preds, y, losses)

interp.plot_confusion_matrix()

interp.plot_confusion_matrix(slice_size=20)

interp.plot_top_losses(9, figsize=(7,7))



data.show_batch(rows=3, figsize=(5,8))

interp.plot_top_losses(9, figsize=(15,11))

interp.plot_confusion_matrix(figsize=(10,10), dpi=80)

learner.show_results()

learner.recorder.plot_losses()

learner.recorder.plot_lr()

learner.fit(3)

m = models.Darknet([1, 2, 4, 6, 3], num_classes=10, nf=32)
m = nn.DataParallel(m, device_ids=None)

lr = 1.3
learn = cnn_learner(data, m)
learn.crit = nn.CrossEntropyLoss()
learn.metrics = [accuracy]
wd=1e-4